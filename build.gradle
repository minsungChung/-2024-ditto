plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'hanghae99'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

bootJar{
	enabled = false
}

jar{
	enabled = false
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	java {
		sourceCompatibility = '17'
	}

	configurations {
		compileOnly{
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}


	dependencies {
		// jdbc
		implementation 'org.springframework.boot:spring-boot-starter-jdbc'
		// mybatis
		implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-web'

		// eureka
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-server', version: '3.0.4'

		// spring cloud feignClient
		implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.0'
		// docker-compose
		developmentOnly("org.springframework.boot:spring-boot-docker-compose")
		// validation
		implementation 'org.springframework.boot:spring-boot-starter-validation'
//		// redis 의존성
//		implementation 'org.springframework.boot:spring-boot-starter-data-redis'
		// jwt
		implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
		runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
		runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
		// password encoder
		implementation 'org.springframework.security:spring-security-crypto'
		// email
		implementation 'org.springframework.boot:spring-boot-starter-mail'
		// string auto generate
		implementation 'org.apache.commons:commons-lang3:3.12.0'
		//thymeleaf
		implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
		implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

		annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

		compileOnly 'org.projectlombok:lombok'
		runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

project(":ditto-module-batch"){
	jar{
		archivesBaseName = 'ditto-module-batch'
	}
}

project(":ditto-module-activity"){
	jar{
		archivesBaseName = 'ditto-module-activity'
	}
}

project(":ditto-module-common"){
	jar{
		archivesBaseName = 'ditto-module-common'
	}
}

project(":ditto-module-newsfeed"){
	jar{
		archivesBaseName = 'ditto-module-newsfeed'
	}
}

project(":ditto-module-user"){
	jar{
		archivesBaseName = 'ditto-module-user'
	}
}

project(":ditto-module-gateway"){
	jar{
		archivesBaseName = 'ditto-module-gateway'
	}
}

project(":ditto-module-stock"){
	jar{
		archivesBaseName = 'ditto-module-stock'
	}
}


